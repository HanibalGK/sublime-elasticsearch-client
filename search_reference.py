import requests
import sublime
import sublime_plugin


class SearchReferenceCommand(sublime_plugin.WindowCommand):
    base_url = 'https://www.elastic.co'
    base_keywords = ['reference', 'elasticsearch']
    keywords = ''
    no_results_hits = [
        {
            'title': 'No results found...',
            'url': ''
        },
        {
            'title': 'Elasticsearch Reference | Elastic',
            'url': 'https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html'
        },
        {
            'title': 'Elasticsearch - The Definitive Guide | Elastic',
            'url': 'https://www.elastic.co/guide/en/elasticsearch/guide/current/index.html'
        },
        {
            'title': 'Hello Elasticsearch Blog (日本語) | by Kunihiko Kido',
            'url': 'https://medium.com/hello-elasticsearch'
        }
    ]

    @property
    def results_total(self):
        return self.results['total']

    @property
    def results_hits(self):
        return self.results['hits']

    @property
    def results_titles(self):
        hits = self.results_hits
        if self.is_no_results():
            hits = self.no_results_hits
        return [[hit['title'], hit['url']] for hit in hits]

    @property
    def results_urls(self):
        def make_url(url):
            if url.startswith('http') or not url:
                return url
            return self.base_url + url

        hits = self.results_hits
        if self.is_no_results():
            hits = self.no_results_hits
        return [make_url(hit['url']) for hit in hits]

    def query(self, keywords):
        self.keywords = keywords
        return ' '.join(self.base_keywords + keywords.split())

    def search(self, keywords):
        query = self.query(keywords)
        try:
            response = requests.get(
                'https://www.elastic.co/suggest',
                params={'q': query}, timeout=3, verify=False)

        except requests.exceptions.RequestException as e:
            return sublime.error_message("Error: {0!s}".format(e))

        self.results = response.json()
        self.window.show_quick_panel(self.results_titles, self.open_url)
        sublime.status_message('Total: {}'.format(self.results_total))

    def is_no_results(self):
        if self.results_total == 0:
            return True
        return False

    def open_url(self, index):
        if index == -1:
            return

        url = self.results_urls[index]

        if not url:
            return self.run()

        self.window.run_command('open_url', {'url': url})

    def select_keywords(self, index):
        if index == -1:
            return

        self.search(SUGGEST_KEYWORDS[index])

    def run(self):
        self.window.show_quick_panel(SUGGEST_KEYWORDS, self.select_keywords)


SUGGEST_KEYWORDS = (
    '_all',
    '_analyzer',
    '_boost',
    '_field_names',
    '_id',
    '_index',
    '_parent',
    '_routing',
    '_size',
    '_source',
    '_timestamp',
    '_ttl',
    '_type',
    '_uid',
    'aggregations',
    'analysis',
    'analyze',
    'analyzers',
    'and filter',
    'api conventions',
    'apostrophe token filter',
    'array type',
    'ascii folding token filter',
    'assertions',
    'attachment type',
    'avg aggregation',
    'azure discovery',
    'basic concepts',
    'batch processing',
    'bool filter',
    'bool query',
    'boosting query',
    'breaking changes',
    'bulk api',
    'bulk udp api',
    'cache',
    'cardinality aggregation',
    'cat aliases',
    'cat allocation',
    'cat apis',
    'cat count',
    'cat fielddata',
    'cat health',
    'cat indices',
    'cat master',
    'cat nodes',
    'cat pending tasks',
    'cat plugins',
    'cat recovery',
    'cat segments',
    'cat shards',
    'cat thread pool',
    'character filters',
    'children aggregation',
    'cjk bigram token filter',
    'cjk width token filter',
    'classic token filter',
    'classic tokenizer',
    'clear cache',
    'cluster',
    'cluster apis',
    'cluster health',
    'cluster reroute',
    'cluster state',
    'cluster stats',
    'cluster update settings',
    'common grams token filter',
    'common options',
    'common terms query',
    'completion suggester',
    'compound word token filter',
    'conclusion',
    'config mappings',
    'configuration',
    'constant score query',
    'context suggester',
    'core types',
    'count api',
    'create an index',
    'create index',
    'custom analyzer',
    'date format',
    'date histogram aggregation',
    'date histogram facet',
    'date range aggregation',
    'dates without years',
    'delete an index',
    'delete api',
    'delete by query api',
    'delete index',
    'delete mapping',
    'deleting documents',
    'delimited payload token filter',
    'deprecations',
    'directory layout',
    'dis max query',
    'discovery',
    'document apis',
    'dynamic mapping',
    'ec2 discovery',
    'edge ngram token filter',
    'edge ngram tokenizer',
    'elision token filter',
    'executing aggregations',
    'executing filters',
    'executing searches',
    'exists filter',
    'explain',
    'explain api',
    'exploring your cluster',
    'exploring your data',
    'extended stats aggregation',
    'facets',
    'field data',
    'field data fields',
    'field data formats',
    'field highlight order',
    'fields',
    'filter aggregation',
    'filter facets',
    'filtered query',
    'filters',
    'filters aggregation',
    'flush',
    'from / size',
    'function score query',
    'fuzzy like this field query',
    'fuzzy like this query',
    'fuzzy query',
    'gateway',
    'geo bounding box filter',
    'geo bounds aggregation',
    'geo distance aggregation',
    'geo distance facets',
    'geo distance filter',
    'geo distance range filter',
    'geo point type',
    'geo polygon filter',
    'geo shape type',
    'geohash cell filter',
    'geohash grid aggregation',
    'geoshape filter',
    'geoshape query',
    'get api',
    'get field mapping',
    'get index',
    'get mapping',
    'get settings',
    'get transformed',
    'getting started',
    'global aggregation',
    'glossary of terms',
    'google compute engine discovery',
    'has child filter',
    'has child query',
    'has parent filter',
    'has parent query',
    'highlighting',
    'histogram aggregation',
    'histogram facets',
    'html strip char filter',
    'http',
    'hunspell token filter',
    'icu analysis plugin',
    'ids filter',
    'ids query',
    'immutable transformation',
    'index aliases',
    'index and query a document',
    'index api',
    'index boost',
    'index modules',
    'index pattern',
    'index request',
    'index shard allocation',
    'index slow log',
    'index templates',
    'indices',
    'indices apis',
    'indices exists',
    'indices filter',
    'indices query',
    'indices recovery',
    'indices segments',
    'indices stats',
    'inner hits',
    'installation',
    'integration tests',
    'introducing the query language',
    'ip type',
    'ipv4 range aggregation',
    'java testing framework',
    'keep types token filter',
    'keep words token filter',
    'keyword analyzer',
    'keyword marker token filter',
    'keyword repeat token filter',
    'keyword tokenizer',
    'kstem token filter',
    'language analyzers',
    'length token filter',
    'letter tokenizer',
    'limit filter',
    'limit token count token filter',
    'list all indexes',
    'local gateway',
    'lowercase token filter',
    'lowercase tokenizer',
    'mapper',
    'mapping',
    'mapping char filter',
    'match all filter',
    'match all query',
    'match query',
    'max aggregation',
    'memcached',
    'merge',
    'meta',
    'migrating to aggregations',
    'min aggregation',
    'min_score',
    'minimum should match',
    'missing aggregation',
    'missing filter',
    'modifying your data',
    'modules',
    'more like this api',
    'more like this query',
    'multi get api',
    'multi match query',
    'multi search api',
    'multi term query rewrite',
    'multi termvectors api',
    'multi-fields',
    'multiple indices',
    'named queries and filters',
    'nested aggregation',
    'nested filter',
    'nested query',
    'nested type',
    'network settings',
    'ngram token filter',
    'ngram tokenizer',
    'node',
    'node level settings related to shadow replicas',
    'nodes hot_threads',
    'nodes info',
    'nodes shutdown',
    'nodes stats',
    'normalization token filter',
    'not filter',
    'object type',
    'open / close index api',
    'optimize',
    'or filter',
    'parameterized tests',
    'parameters',
    'path hierarchy tokenizer',
    'pattern analyzer',
    'pattern capture token filter',
    'pattern replace char filter',
    'pattern replace token filter',
    'pattern tokenizer',
    'pending cluster tasks',
    'percentile ranks aggregation',
    'percentiles aggregation',
    'percolator',
    'phonetic token filter',
    'phrase suggester',
    'plugins',
    'porter stem token filter',
    'post filter',
    'preference',
    'prefix filter',
    'prefix query',
    'put mapping',
    'queries',
    'query',
    'query dsl',
    'query facets',
    'query filter',
    'query string query',
    'randomized testing',
    'range aggregation',
    'range facets',
    'range filter',
    'range query',
    'refresh',
    'regexp filter',
    'regexp query',
    'relocation',
    'repositories',
    'request body search',
    'rescoring',
    'return values',
    'reverse nested aggregation',
    'reverse token filter',
    'root object type',
    'running as a service on linux',
    'running as a service on windows',
    'script fields',
    'script filter',
    'scripted metric aggregation',
    'scripting',
    'scroll',
    'search',
    'search apis',
    'search exists api',
    'search requests',
    'search shards api',
    'search template',
    'search type',
    'setup',
    'shadow replica indices',
    'shard query cache',
    'shard states',
    'shingle token filter',
    'significant terms aggregation',
    'similarity module',
    'simple analyzer',
    'simple query string query',
    'snapshot and restore',
    'snowball analyzer',
    'snowball token filter',
    'sort',
    'source filtering',
    'span first query',
    'span multi term query',
    'span near query',
    'span not query',
    'span or query',
    'span term query',
    'standard analyzer',
    'standard token filter',
    'standard tokenizer',
    'statistical facet',
    'stats aggregation',
    'stats and info apis',
    'status',
    'stemmer override token filter',
    'stemmer token filter',
    'stop analyzer',
    'stop token filter',
    'stopwords',
    'store',
    'suggesters',
    'sum aggregation',
    'synonym token filter',
    'system and settings',
    'template query',
    'term filter',
    'term query',
    'term suggester',
    'term vectors',
    'terms aggregation',
    'terms facet',
    'terms filter',
    'terms query',
    'terms stats facet',
    'testing',
    'text scoring in scripts',
    'thai tokenizer',
    'the search api',
    'thread pool',
    'thrift',
    'token filters',
    'tokenizers',
    'top children query',
    'top hits aggregation',
    'transform',
    'translog',
    'transport',
    'transport tracer',
    'tribe node',
    'trim token filter',
    'truncate token filter',
    'type filter',
    'types',
    'types exists',
    'uax email url tokenizer',
    'unique token filter',
    'unit tests',
    'update api',
    'update indices settings',
    'updating documents',
    'upgrade',
    'upgrading',
    'uppercase token filter',
    'uri search',
    'url-based access control',
    'using the elasticsearch test classes',
    'validate api',
    'value count aggregation',
    'version',
    'warmers',
    'whitespace analyzer',
    'whitespace tokenizer',
    'why randomized testing?',
    'wildcard query',
    'word delimiter token filter',
    'zen discovery',
)
